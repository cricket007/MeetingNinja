package objects;

import java.util.ArrayList;
import java.util.Iterator;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

@JsonInclude(JsonInclude.Include.NON_NULL)
// Generated by : http://www.jsonschema2pojo.org/
@JsonPropertyOrder({ "topic", "time", "subtopic" })
public class Topic {
	@JsonProperty("topic")
	private String topic;
	@JsonProperty("time")
	private long time;
	@JsonProperty("subtopic")
	private ArrayList<Topic> subTopics = new ArrayList<Topic>();

	public Topic() {
		this("New Topic");
	}

	public Topic(String title) {
		this.topic = title;
	}

	@JsonProperty("topic")
	public String getTitle() {
		return topic;
	}

	@JsonProperty("topic")
	public void setTitle(String title) {
		topic = title;
	}

	@JsonProperty("subtopic")
	public ArrayList<Topic> getTopics() {
		// TODO Auto-generated method stub
		return subTopics;
	}

	@JsonProperty("subtopic")
	public void setTopics(ArrayList<Topic> topics) {
		// TODO Auto-generated method stub
		subTopics = topics;
	}

	public Topic withLength(long length) {
		this.time = length;
		return this;
	}

	public String getTime() {
		return Long.toString(getTotalSubtopicTime(this));
	}

	private long getTotalSubtopicTime(Topic t) {
		long total = 0L;
		final Topic root = t;
		final ArrayList<Topic> topicList = root.getTopics();
		total += root.time;
		for (Iterator<Topic> i = topicList.iterator(); i.hasNext();) {
			total += getTotalSubtopicTime(i.next());
		}
		return total;
	}

	public void addTopic(Topic subTopic) {
		this.subTopics.add(subTopic);
	}

	public void addTopic(int index, Topic subTopic) {
		this.subTopics.add(index, subTopic);
	}
}
