package objects;

import java.util.ArrayList;
import java.util.Iterator;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

@JsonInclude(JsonInclude.Include.NON_NULL)
// Generated by : http://www.jsonschema2pojo.org/
@JsonPropertyOrder({ "agendaID", "title", "content" })
public class Agenda {
	@JsonProperty("agendaID")
	private String agendaID;
	@JsonProperty("title")
	private String title;
	@JsonProperty("content")
	private ArrayList<Topic> topics = new ArrayList<Topic>();

	public Agenda() {
		// Required empty constructor
		this("New Agenda");
	}

	public Agenda(String title) {
		this.title = title;
	}

	@JsonProperty("agendaID")
	public void setID(String id) {
		int testInt = Integer.parseInt(id);
		setID(testInt);
	}

	@JsonProperty("agendaID")
	public void setID(int id) {
		this.agendaID = Integer.toString(id);
	}

	@JsonProperty("title")
	public String getTitle() {
		return title;
	}

	@JsonProperty("title")
	public void setTitle(String title) {
		this.title = title;
	}

	public void addTopic(Topic topic) {
		topics.add(topic);
	}

	public void addTopic(int index, Topic topic) {
		if (index < topics.size() && index > 0)
			topics.add(index, topic);
	}

	@JsonProperty("content")
	public ArrayList<Topic> getTopics() {
		return topics;
	}

	@JsonProperty("content")
	public void setTopics(ArrayList<Topic> topics) {
		this.topics = topics;
	}

	public void pprint() {
		System.out.println(String.format("%s (%d)", getTitle(), getTopics()
				.size()));
		for (Iterator<Topic> i = topics.iterator(); i.hasNext();) {
			pprint(i.next(), 0);
		}
	}

	protected void pprint(Topic s, int depth) {
		final Topic root = s;
		final ArrayList<Topic> topicList = root.getTopics();
		for (int i = -1; i < depth; i++) {
			System.out.print("--");
		}
		System.out.println(String.format("%s (%d)", root.getTitle(),
				topicList.size()));
		for (Iterator<Topic> i = topicList.iterator(); i.hasNext();) {
			pprint(i.next(), depth + 1);
		}
	}
}
