package com.droidrage.meetingninja;

import java.util.Locale;

import com.droidrage.meetingninja.R;
import com.droidrage.meetingninja.meetings.MeetingsFragment;
import com.droidrage.meetingninja.notes.NotesFragment;
import com.droidrage.meetingninja.tasks.TasksFragment;
import com.droidrage.meetingninja.user.LoginActivity;
import com.droidrage.meetingninja.user.SessionManager;
import com.droidrage.meetingninja.user.ViewProfileFragment;

import android.app.ActionBar;
import android.app.FragmentTransaction;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.view.ViewPager;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import android.widget.Toast;

/**
 * Main Window displaying tabs for meetings and notes. Mostly autogenerated by
 * Eclipse.
 * 
 * @author moorejm
 * 
 */
public class MainActivity extends FragmentActivity implements
		ActionBar.TabListener {

	/**
	 * The {@link android.support.v4.view.PagerAdapter} that will provide
	 * fragments for each of the sections. We use a
	 * {@link android.support.v4.app.FragmentPagerAdapter} derivative, which
	 * will keep every loaded fragment in memory. If this becomes too memory
	 * intensive, it may be best to switch to a
	 * {@link android.support.v4.app.FragmentStatePagerAdapter}.
	 */
	SectionsPagerAdapter mSectionsPagerAdapter;

	/**
	 * The {@link ViewPager} that will host the section contents.
	 */
	ViewPager mViewPager;

	public static String username;
	public String fragment;
	public Intent noteIntent;
	private ActionBar actionBar;
	private static MeetingsFragment meetingsFrag = null;
	private static NotesFragment notesFrag = null;
	private static TasksFragment tasksFrag = null;
	private SessionManager session;
	private static ViewProfileFragment prof = null;
	private String[] tabNames = new String[] { "Profile", "Meetings", "Notes",
			"Tasks" };

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		session = new SessionManager(getApplicationContext());

		// Check if logged in
		session.checkLogin();

		// Else continue
		setContentView(R.layout.activity_main);
		setupActionBar();
		username = session.getUserDetails().get(SessionManager.USER);

	}

	private void setupActionBar() {
		// Set up the action bar.

		actionBar = getActionBar();
		actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);

		// Create the adapter that will return a fragment for each of the three
		// primary sections of the app.
		mSectionsPagerAdapter = new SectionsPagerAdapter(
				getSupportFragmentManager());

		// Set up the ViewPager with the sections adapter.
		mViewPager = (ViewPager) findViewById(R.id.pager);
		mViewPager.setAdapter(mSectionsPagerAdapter);

		// When swiping between different sections, select the corresponding
		// tab. We can also use ActionBar.Tab#select() to do this if we have
		// a reference to the Tab.
		mViewPager
				.setOnPageChangeListener(new ViewPager.SimpleOnPageChangeListener() {
					@Override
					public void onPageSelected(int position) {
						actionBar.setSelectedNavigationItem(position);
					}
				});

		// Setup the tabs here
		Locale l = Locale.getDefault();

		// For each of the sections in the app, add a tab to the action bar.
		for (int i = 0; i < mSectionsPagerAdapter.getCount(); i++) {
			// Create a tab with text corresponding to the page title defined by
			// the adapter. Also specify this Activity object, which implements
			// the TabListener interface, as the callback (listener) for when
			// this tab is selected.
			ActionBar.Tab tab = actionBar.newTab();
			tab.setText(tabNames[i].toUpperCase(l));
			actionBar.addTab(tab.setTabListener(this));
		}

		// Get the extras from the calling intent
		username = getIntent().getStringExtra(LoginActivity.EXTRA_USERNAME);

		if (getIntent().hasExtra("Fragment")
				&& getIntent().getStringExtra("Fragment").compareToIgnoreCase(
						"notes") == 0) {
			Log.d("GET_INTENT", getIntent().getStringExtra("Fragment"));
			noteIntent = getIntent();
			int noteID = noteIntent.getIntExtra("NoteID", -1);

			Log.d("NOTES", "NoteID " + noteID);

			if (noteID > 0) {
				NotesFragment.updateNote(noteID,
						getIntent().getStringExtra("NoteName"), getIntent()
								.getStringExtra("NoteContent"));
			}
		}
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle presses on the action bar items
		switch (item.getItemId()) {
		case R.id.action_refresh:
			switch (mViewPager.getCurrentItem()) {
			case (1):
				Toast.makeText(this, "Refreshing Meetings", Toast.LENGTH_SHORT)
						.show();
				meetingsFrag.refreshMeetings();
				return true;
			case (2):
				Toast.makeText(this, "Refreshing Notes", Toast.LENGTH_SHORT)
						.show();
				return true;
			default:
				return super.onOptionsItemSelected(item);
			}

		case R.id.action_new_meeting:
			meetingsFrag.createMeeting();
			return true;
		case R.id.action_new_note:
			Toast.makeText(this, "Create a note", Toast.LENGTH_SHORT).show();
			return true;
		case R.id.action_logout:
			session.logoutUser();
			return true;
		default:
			return super.onOptionsItemSelected(item);
		}

	}

	@Override
	public void onTabSelected(ActionBar.Tab tab,
			FragmentTransaction fragmentTransaction) {
		// When the given tab is selected, switch to the corresponding page in
		// the ViewPager.
		mViewPager.setCurrentItem(tab.getPosition());
	}

	@Override
	public void onTabUnselected(ActionBar.Tab tab,
			FragmentTransaction fragmentTransaction) {
	}

	@Override
	public void onTabReselected(ActionBar.Tab tab,
			FragmentTransaction fragmentTransaction) {
	}

	/**
	 * A {@link FragmentPagerAdapter} that returns a fragment corresponding to
	 * one of the sections/tabs/pages.
	 */
	public class SectionsPagerAdapter extends FragmentPagerAdapter {

		public SectionsPagerAdapter(FragmentManager fm) {
			super(fm);
		}

		@Override
		public Fragment getItem(int position) {
			// getItem is called to instantiate the fragment for the given page.
			// Return a Fragment depending on the tab position

			if (noteIntent != null
					&& noteIntent.getStringExtra("Fragment").compareTo("notes") == 0) {
				position = 1;
				actionBar.setSelectedNavigationItem(position);
				noteIntent.putExtra("Fragment", "none");
			}

			Fragment frag = null;
			Bundle args = new Bundle();
			switch (position) {
			case (0):
				prof = new ViewProfileFragment();
				return prof;
			case (1):
				meetingsFrag = new MeetingsFragment();
				return meetingsFrag;
			case (2):
				notesFrag = new NotesFragment();
				return notesFrag;
			case (3):
				tasksFrag = new TasksFragment();
				return tasksFrag;
			default:
				frag = new DummySectionFragment();
				args.putInt(DummySectionFragment.ARG_SECTION_NUMBER, position);
				frag.setArguments(args);
				return frag;
			}
		}

		@Override
		public int getCount() {
			// Show 4 total pages.
			return 4;
		}

		@Override
		public CharSequence getPageTitle(int position) {
			Locale l = Locale.getDefault();
			if (position >= 0 && position < tabNames.length) {
				return tabNames[position].toUpperCase(l);
			}
			return null;
		}
	}

	/**
	 * A dummy fragment representing a section of the app, but that simply
	 * displays dummy text. TODO: Remove this at some point
	 */
	public static class DummySectionFragment extends Fragment {
		/**
		 * The fragment argument representing the section number for this
		 * fragment.
		 */
		public static final String ARG_SECTION_NUMBER = "section_number";

		public DummySectionFragment() {
		}

		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container,
				Bundle savedInstanceState) {
			View rootView = inflater.inflate(R.layout.fragment_main_dummy,
					container, false);
			TextView dummyTextView = (TextView) rootView
					.findViewById(R.id.section_label);
			dummyTextView.setText(Integer.toString(getArguments().getInt(
					ARG_SECTION_NUMBER))
					+ " TEST");
			return rootView;
		}
	}

}
