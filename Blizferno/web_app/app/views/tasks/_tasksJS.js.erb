var currentID;
var deleteID;
var tasksJSON = <%= raw @tasks %>;
tasksJSON = JSON.parse("["+tasksJSON.toString()+"]");
var allUsers = <%= raw @allUsersRaw %>;
allUsers = JSON.parse(JSON.stringify(allUsers));

function hideTaskModal(){
	$('#viewTaskModal').modal('hide');
}

function cancelEdit(){
	showViewTaskModal(currentID);
	$('#editTaskModal').modal('hide');
}

function showEditModal(){
	$('#editTaskModal').modal('hide');
	$('#editTaskModal').on('hidden.bs.modal', function() {
		$(this).removeData('bs.modal');
	});

	document.getElementById("titleE").value = tasksJSON[currentID]["title"];
	document.getElementById("isCompletedE").checked = tasksJSON[currentID]["isCompleted"];
	document.getElementById("descriptionE").value = tasksJSON[currentID]["description"];
	document.getElementById("deadlineE").value = tasksJSON[currentID]["deadline"];
	document.getElementById("completionCriteriaE").value = tasksJSON[currentID]["completionCriteria"];
	
	populateSelect(allUsers['users'], "name", "userID", tasksJSON[currentID]["assignedTo"], "grpMemSlct");

	$('#editTaskModal').modal('show');
	$('#viewTaskModal').modal('hide');
}

function updateEditedValues(){


	var editTaskID = tasksJSON[currentID]['taskID'].toString();
	var editField = "";
	var editValue = "";
	var editData = "";


	for (key in tasksJSON[currentID]){

		if(document.getElementById(key+"E") != null && tasksJSON[currentID][key] != document.getElementById(key+"E").value){
			tasksJSON[currentID][key] = document.getElementById(key+"E").value;

			editField = key;
			editValue = tasksJSON[currentID][key];
			editData = JSON.stringify({"taskID":editTaskID,"field":editField,"value":editValue});

			$.ajax({
				type: 'PUT',
				url: 'http://csse371-04.csse.rose-hulman.edu/Task/',
				data: editData
			});

		}
	}
	$('#editTaskModal').modal('hide');
}

function showDeleteModal(ID){
	deleteID = ID;
	$('#deleteTaskModal').modal('show');
}

function hideDeleteModal(){

	var deleteData = tasksJSON[deleteID]['taskID'];

	$.ajax({
		type: 'DELETE',
		url: 'http://csse371-04.csse.rose-hulman.edu/Task/'+deleteData,
		success:function(data){
			if(JSON.parse(data)["valid"] == "true"){
				delete tasksJSON[deleteID];
				window.location.reload(true);
			}
		}
	});

	$('#deleteTaskModal').modal('hide');
}

function showViewTaskModalNoID(){
	updateEditedValues();
	showViewTaskModal(currentID);
}

function showViewTaskModal(ID){
	$('#viewTaskModal').modal('hide');
	$('#viewTaskModal').on('hidden.bs.modal', function() {
		$(this).removeData('bs.modal');
	});

	currentID = ID;

	document.getElementById("titleV").innerHTML = tasksJSON[currentID]["title"];

	if(tasksJSON[currentID]["isCompleted"] == "on")
	document.getElementById("isCompletedV").innerHTML = "True";
	document.getElementById("descriptionV").innerHTML = tasksJSON[currentID]["description"];
	document.getElementById("deadlineV").innerHTML = tasksJSON[currentID]["deadline"];
	document.getElementById("dateCreatedV").innerHTML = tasksJSON[currentID]["dateCreated"];
	document.getElementById("dateAssignedV").innerHTML = tasksJSON[currentID]["dateAssigned"];
	document.getElementById("completionCriteriaV").innerHTML = tasksJSON[currentID]["completionCriteria"];

	$.ajax({
		type: 'GET',
        url: "http://csse371-04.csse.rose-hulman.edu/User/" + tasksJSON[currentID]["assignedTo"],
        success:function(data){
          assignedTo = JSON.parse(data);
        },
        async: false
	});

	$.ajax({
		type: 'GET',
        url: "http://csse371-04.csse.rose-hulman.edu/User/" + tasksJSON[currentID]["assignedTo"],
        success:function(data){
          assignedFrom = JSON.parse(data);
        },
        async: false
	});

	$.ajax({
		type: 'GET',
        url: "http://csse371-04.csse.rose-hulman.edu/User/" + tasksJSON[currentID]["assignedTo"],
        success:function(data){
          createdBy = JSON.parse(data);
        },
        async: false
	});

	document.getElementById("assignedToV").innerHTML = assignedTo["name"];
	document.getElementById("assignedFromV").innerHTML = assignedFrom["name"];
	document.getElementById("createdByV").innerHTML = createdBy["name"];

	$('#viewTaskModal').modal('show');
	$('#editTaskModal').modal('hide');
}

function validateForm(){
	var title = document.forms["input"]["title"].value;
	var description = document.forms["input"]["description"].value;
	var deadline = document.forms["input"]["deadline"].value;
	var completionCriteria = document.forms["input"]["completionCriteria"].value;
	var assignedTo = document.forms["input"]["assignedTo"].value;

	if(title.length == 0 || description.length == 0 || !checkDeadlineFormat(deadline) || completionCriteria.length == 0 || assignedTo.length == 0) {
		var string = "The following fields need filled or modified: \n\n";
		if(title.length == 0) string = string + "Title\n";
		if(description.length == 0) string = string + "Description\n";
		if(!checkDeadlineFormat(deadline)) string = string + "Deadline (format = 'MM/DD/YYYY_HH:MM', where the underscore is a space)\n";
		if(completionCriteria.length == 0) string = string + "Completion Criteria\n";
		if(assignedTo.length == 0) string = string + "Assigned To\n";
		alert(string);
		return false;
	}else{
		alert("The following fields were added to the db: " + title + " " + description + " " + deadline + " " + completionCriteria + " " + assignedTo)
		return true;
	}
}

function checkDeadlineFormat(deadline){
	if(deadline.length == 0) return false;
	else {
		var array = deadline.split('');
		var date = new Date()
		var month = parseInt(deadline.substring(0,2));
		var day = parseInt(deadline.substring(3,5));
		var year = parseInt(deadline.substring(6, 10));
		var hours = parseInt(deadline.substring(11, 13));
		var minutes = parseInt(deadline.substring(14, 16));
		if(!(!isNaN(array[0]) && !isNaN(array[1]) && !isNaN(array[3]) && !isNaN(array[4]) && !isNaN(array[6]) && !isNaN(array[7]) && !isNaN(array[8]) && !isNaN(array[9]) && !isNaN(array[11]) && !isNaN(array[12]) && !isNaN(array[14]) && !isNaN(array[15]))) return false;
		else if(array[2] != '/' || array[5] != '/' || array[10] != ' ' || array[13] != ':') return false;
		else if(day > 31 || day == 0 || month > 12 || month == 0 || year < date.getFullYear() || hours > 23 || minutes > 59) return false;
		else return true;
	}
}

function submitCreateModal(){
		
		//grab the form from the html document
		var form = document.getElementById('createTask');
		//still testing validation
		//if(validateMeetingForm(form)){
		//parse it into a json object
		var formJSON = new convertFormToJSON(form);

		//manually grab the values for each field expected by the backend
		var userID = <%=@userID%>;
		var postTitle = formJSON.title;
		var postisCompleted = formJSON.isCompleted;
		var postDescription = formJSON.description;
		var postDeadline = formJSON.deadline;
		var postDateCreated = formJSON.dateCreated;
		var postDateAssigned = formJSON.dateAssigned;
		var postCompletionCriteria = formJSON.completionCriteria;
		var postAssignedFrom = <%=@userID%>;
		var postCreatedBy = <%=@userID%>;


		var attendees = getMembers('assignedTo');
		var postAttendance = [];

		for (var i = attendees.length - 1; i >= 0; i--) {
		  postAttendance.push({"userID":attendees[i]});
		};

		//set up the data for the call
		var postData = JSON.stringify({
			"title":postTitle,
			"isCompleted":postisCompleted,
			"description":postDescription,
			"deadline":postDeadline,
			"dateCreated":postDateCreated,
			"dateAssigned":postDateAssigned,
			"completionCriteria":postCompletionCriteria,
			"assignedTo":userID,
			"assignedFrom":postAssignedFrom,
			"createdBy":postCreatedBy
		});
			
		//make the POST request to the backend
		$.ajax({
			type: 'POST',
			url: 'http://csse371-04.csse.rose-hulman.edu/Task/',
			data: postData,
			success:function(data){
				// if successful then close the modal and reload the page
				$('#newTaskModal').modal('hide');
				window.location.reload(true);
			}
		});
}

function getMembers(id){
    var newMembers = [];
    $( '#' + id + ' :selected' ).each( function( i, selected ) {
      newMembers[i] = $( selected ).val();
    });
    return newMembers;
}

function populateSelect(JSONArray, JSONDisplayColumn, JSONValueColumn, JSONSelectValues, selectID){
    var select = document.getElementById(selectID);

    if(select.options.length != 0){
      for(var i = select.options - 1; i > -1; i--){
        select.remove(i);
      }
    }

    for (var k in JSONArray){
      var el = document.createElement("option");
      el.textContent = JSONArray[k][JSONDisplayColumn];
      el.value = JSONArray[k][JSONValueColumn];
      select.appendChild(el);
    }

    for (var i in JSONSelectValues){
      for (var j in select.options){
        if(JSONSelectValues[i][JSONValueColumn] == select.options[j].value){
          select.options[j].selected = true;
          break;
        }
      }
    }
}

//This function takes a form element and creates a json object using the name of each input in the form as the field and the value of each input as the corresponding input
function convertFormToJSON(form){
	var array = jQuery(form).serializeArray();
	var json = {};

	jQuery.each(array, function() {
		json[this.name] = this.value || '';
	});

	return json;
}
