var currentID;
var deleteID;
var notesJSON = <%= raw @notes %>;
notesJSON = JSON.parse("["+notesJSON.toString()+"]");
var agendasJSON = <%= raw @agendas %>;
agendasJSON = JSON.parse(JSON.stringify(agendasJSON));
var userMeetings = <%= raw @userMeetingsRaw %>;
userMeetings = JSON.parse(JSON.stringify(userMeetings));

function showViewModal(ID, type){
	currentID = ID;
	if(type == 'note'){
		showViewNoteModal();
	}else if(type == 'agenda'){
		showViewAgendaModal();
	}
}

function showViewNoteModal(){
	document.getElementById("NtitleV").innerHTML = notesJSON[currentID]["title"];
	document.getElementById("NcontentV").innerHTML = notesJSON[currentID]["content"];
	document.getElementById("NdescriptionV").innerHTML = notesJSON[currentID]["description"];
	document.getElementById("NdateCreatedV").innerHTML = epochToFullString(notesJSON[currentID]["dateCreated"]);

	$('#editNoteModal').modal('hide');
	$('#viewNoteModal').modal('show');
}

function showViewAgendaModal(){
	document.getElementById("AtitleV").innerHTML = agendasJSON[currentID]["title"];
	document.getElementById("AuserIDV").innerHTML = agendasJSON[currentID]["userID"];
	document.getElementById("AmeetingIDV").innerHTML = agendasJSON[currentID]["meetingID"];
	/*document.getElementById("AcontentTitleV").innerHTML = agendasJSON[currentID]["content"]["1"]["title"];
	document.getElementById("AcontentTimeV").innerHTML = agendasJSON[currentID]["content"]["1"]["time"];
	document.getElementById("AcontentDescriptionV").innerHTML = agendasJSON[currentID]["content"]["1"]["description"];
*/
createAgendaStructure(agendasJSON[currentID]["content"], document.getElementById("AmeetingIDV").parentNode);

	$('#editAgendaModal').modal('hide');
	$('#viewAgendaModal').modal('show');	
}

function jsonLength(json){
	var key, count = 0;
	for(key in json) {
	  if(json.hasOwnProperty(key)) {
		count++;
	  }
	}
	return count;
}


function createAgendaStructure(contents, element){
//alert("contents="+JSON.stringify(contents));
//alert("count="+jsonLength(contents));


	if(typeof contents != 'undefined'){
		for(var i = 1; i <= jsonLength(contents); i++){
//alert("description="+contents[i]['description']);
//alert("contents[i]="+JSON.stringify(contents[i]));

			var contentElement = document.createElement("div");
				contentElement.setAttribute("style", "margin-left:"+15*i+"%");
			var contentElementText = document.createTextNode("Content: ");
				contentElement.appendChild(contentElementText);
				element.appendChild(contentElement);

			contentElement.appendChild(document.createElement("br"));
			contentElement.appendChild(document.createElement("br"));

			var title = document.createElement("div");
			var titleText = document.createTextNode("Title: " + contents[i]['title']);
				title.appendChild(titleText);
				contentElement.appendChild(title);

			contentElement.appendChild(document.createElement("br"));
			contentElement.appendChild(document.createElement("br"));

			var time = document.createElement("div");
			var timeText = document.createTextNode("Time: " + epochToFullString(contents[i]['time']));
				time.appendChild(timeText);
				contentElement.appendChild(time);

			contentElement.appendChild(document.createElement("br"));
			contentElement.appendChild(document.createElement("br"));

			var description = document.createElement("div");
			var descriptionText = document.createTextNode("Description: " + contents[i]['description']);
				description.appendChild(descriptionText);
				contentElement.appendChild(description);

			contentElement.appendChild(document.createElement("br"));
			contentElement.appendChild(document.createElement("br"));

			createAgendaStructure(contents[i]["content"], contentElement);
		}
	}
}


function createEditAgendaStructure(contents, element, depth){
//alert("contents="+JSON.stringify(contents));
//alert("count="+jsonLength(contents));


	if(typeof contents != 'undefined'){
		for(var i = 1; i <= jsonLength(contents); i++){
//alert("description="+contents[i]['description']);
//alert("contents[i]="+JSON.stringify(contents[i]));
	var blah = i-1;

			var contentElement = document.createElement("div");
				contentElement.setAttribute("style", "margin-left:"+15*i+"%");
if(typeof element.getAttribute("id").split(':')[1] == 'undefined'){
	contentElement.setAttribute("id", "contentID|0:0");
}else{
		contentElement.setAttribute("id", "contentID|"+element.getAttribute("id").split('|')[1]+"-"+depth+":"+blah);
}
				
			var contentElementText = document.createTextNode("Content: ");
				contentElement.appendChild(contentElementText);
				element.appendChild(contentElement);

			contentElement.appendChild(document.createElement("br"));
			contentElement.appendChild(document.createElement("br"));


			var titleElement = document.createElement("input");
				titleElement.setAttribute("type", "text");
				titleElement.setAttribute("class", "form-control");
				titleElement.setAttribute("name", "title-"+contentElement.getAttribute('id').split('|')[1]);
				titleElement.value = contents[i]['title'];
			var titleDiv = document.createElement("div");
			var titleText = document.createTextNode("Title: ");
				titleDiv.appendChild(titleText);
				titleDiv.appendChild(titleElement);
				contentElement.appendChild(titleDiv);


			contentElement.appendChild(document.createElement("br"));
			contentElement.appendChild(document.createElement("br"));

			var timeElement = document.createElement("input");
				timeElement.setAttribute("type", "text");
				timeElement.setAttribute("class", "form-control");
				timeElement.setAttribute("name", "time-"+contentElement.getAttribute('id').split('|')[1]);
				timeElement.value = contents[i]['time'];
			var timeDiv = document.createElement("div");
			var timeText = document.createTextNode("Time: ");
				timeDiv.appendChild(timeText);
				timeDiv.appendChild(timeElement);
				contentElement.appendChild(timeDiv);		



			contentElement.appendChild(document.createElement("br"));
			contentElement.appendChild(document.createElement("br"));

			var descriptionElement = document.createElement("input");
				descriptionElement.setAttribute("type", "textarea");
				descriptionElement.setAttribute("class", "form-control");
				descriptionElement.setAttribute("name", "description-"+contentElement.getAttribute('id').split('|')[1]);
				descriptionElement.value = contents[i]['description'];
			var descriptionDiv = document.createElement("div");
			var descriptionText = document.createTextNode("Description: ");
				descriptionDiv.appendChild(descriptionText);
				descriptionDiv.appendChild(descriptionElement);
				contentElement.appendChild(descriptionDiv);

			contentElement.appendChild(document.createElement("br"));
			contentElement.appendChild(document.createElement("br"));

			createEditAgendaStructure(contents[i]["content"], contentElement, depth+1);
		}
	}
}

function showViewModalNoID(type){
	updateEditedValues(type);
}

function showEditModal(ID, type){
	currentID = ID;
	if(type == 'note'){
		showEditNoteModal();
	}else if(type == 'agenda'){
		showEditAgendaModal();
	}
}

function showEditNoteModal(){
	document.getElementById("NtitleE").value = notesJSON[currentID]["title"];
	document.getElementById("NcontentE").value = notesJSON[currentID]["content"];
	document.getElementById("NdescriptionE").value = notesJSON[currentID]["description"];
	document.getElementById("NdateCreatedE").innerHTML = notesJSON[currentID]["dateCreated"];

	$('#viewNoteModal').modal('hide');
	$('#editNoteModal').modal('show');
}

function showEditAgendaModal(){
	document.getElementById("AtitleE").value = agendasJSON[currentID]["title"];
	document.getElementById("AuserIDE").innerHTML = agendasJSON[currentID]["userID"];
/*	document.getElementById("AcontentTitleE").value = agendasJSON[currentID]["content"]["1"]["title"];
	document.getElementById("AcontentTimeE").value = agendasJSON[currentID]["content"]["1"]["time"];
	document.getElementById("AcontentDescriptionE").value = agendasJSON[currentID]["content"]["1"]["description"];
*/



//createEditAgendaStructure(agendasJSON[currentID]["content"], document.getElementById("AuserIDE").parentNode, 0);


		 	meetingIDs = [];
			possibleMeetings = [{"meetingID":agendasJSON[currentID]["meetingID"],"title":agendasJSON[currentID]["meetingID"]}]
			for(agenda in agendasJSON){
				meetingIDs.push(agenda['meetingID'])
			}
			for(meeting in userMeetings['meetings']){
				if(meetingIDs.indexOf(meeting['id']) > 0){
					possibleMeetings.push({"meetingID":meeting['id'],"title":meeting['title']});
				} 
			}


    populateSelect(possibleMeetings, "title", "meetingID", agendasJSON[currentID]["meetingID"], "AmeetingIDE");

	$('#viewAgendaModal').modal('hide');
	$('#editAgendaModal').modal('show');
}

function showEditModalNoID(type){
	showEditModal(currentID, type);
}

function cancelEdit(type){
	showViewModal(currentID, type)
}

function updateEditedValues(type){
	if(type == 'note'){
		var editForm = convertFormToJSON(document.getElementById("editNoteForm"));
		var invalid = validateEditedNoteValues(editForm);
		if(!invalid){	
			updateEditedNoteValues(editForm);
			showViewModal(currentID, type);
		}
	}else if(type =='agenda'){
		var form = document.getElementById('editAgendaForm');
		var formJSON = new convertFormToJSON(form);
//alert("this is the form: "+ JSON.stringify(formJSON));
//alert("this is the other version: "+ JSON.stringify(convertEditFormJSONToPOSTFormat(formJSON)));
//convertEditFormJSONToPOSTFormat(0);

		var invalid = validateEditedAgendaValues(formJSON);
		if (!invalid){
			updateEditedAgendaValues(formJSON);
			showViewModal(currentID, type);
		}
	}
}


function convertEditFormJSONToPOSTFormat(givenJSON){
/*
	var returnJSON = {};
	for(var i = 0; i < r {
		var nameSplit = i.split("-");
		if(nameSplit[0] == 0){// if first level
			retunJSON[nameSplit[2]]=val;
		}else if(nameSplit[0] > depth){
			depth = nameSplit[0];
			returnJSON["content"]=
		}
	}

return returnJSON;
*/
/*
var blah = "content";
var jsontest = {};
for (var i = 1; i < 4; i++){
eval("jsontest."+blah+"=[{content:[]}]");

	blah = blah + "[0].content";
}
alert("blah:"+blah);
eval("jsontest."+blah+"='test'");

alert("testing:"+JSON.stringify(jsontest));
*/

var returnJSON = {"content":[]};
	$.each(givenJSON, function(i, val){
		var positionList = i.split('-');
alert("positionList: "+ positionList);
positionList.shift();

		var field = positionList[0];
		//eval("returnJSON."+generateNestedContent(positionList)+".field=val");
	alert("returnJSON."+generateNestedContent(positionList)+".field=val");
	});

return returnJSON;

}



function generateNestedContent(positionList){
alert("test: "+ positionList);
	var locationArray = positionList.split(':');
	var depth = locationArray[0];
	var position = locationArray[1];
	var evalString = "content";
	for(var i = 0; i < positionList.length; i++){

		evalString = evalString +"["+position+"].content";
	}
	evalString = evalString.slice(0,-8);
alert("evalString: "+evalString);
	return evalString;
}




function updateEditedNoteValues(editForm){
	var editNoteID = notesJSON[currentID]['noteID'].toString();
	var editField = "";
	var editValue = "";
	var editData = "";


	for (key in notesJSON[currentID]){
		if(editForm[key] != null && notesJSON[currentID][key] != editForm[key]){
			notesJSON[currentID][key] = editForm[key];

			editField = key;
			editValue = notesJSON[currentID][key];
			editData = JSON.stringify({"noteID":editNoteID,"field":editField,"value":editValue});

			ajaxRequest(editData, 'PUT', '/Note/', true, 'null');

		}
	}
}

function validateEditedNoteValues(editForm){
	var invalidFields = false;

	for (key in notesJSON[currentID]){
		if(document.getElementById("N" + key + "ER") != null){
			if(editForm[key] == ""){
				invalidFields = true;
				document.getElementById("N" + key+"ER").style.display = "inline";
			}
			else{
				document.getElementById("N" + key+"ER").style.display = "none";
			}
		}
	}

	return invalidFields
}

function updateEditedAgendaValues(formJSON){

		var postTitle = formJSON.title;
		var postMeeting = formJSON.meeting;
		var postUser = <%=@userID%>;
		var datetime = timeToEpoch(formJSON["contentDate"], formJSON["contentTime"]);
		var postContent = JSON.stringify([{
				"title":formJSON["contentTitle"],
				"time":datetime,
				"description":formJSON["contentDescription"],
				"content":[]
			}]);
		postContent = JSON.parse(postContent);

		var postData = JSON.stringify({
			"agendaID":agendasJSON[currentID]["agendaID"],
			"title":postTitle,
			"meeting":postMeeting,
			"user":postUser,
			"content":postContent
		});
		var doOnSuccess = function(data){
							$('#editAgendaModal').modal('hide');
							window.location.reload(true);
						}
		ajaxRequest(postData, 'PUT', '/Agenda/', true, doOnSuccess);
}

function validateEditedAgendaValues(editForm){
	var invalidFields = false;

	for (key in agendasJSON[currentID]){
		if(document.getElementById("A" + key + "ER") != null){
			if(editForm[key] == ""){
				invalidFields = true;
				document.getElementById("A" + key+"ER").style.display = "inline";
			}
			else{
				document.getElementById("A" + key+"ER").style.display = "none";
			}
		}
	}

	var additionalkeys = ["contentTitle","contentTime","contentDescription"];
	for (key in additionalkeys){
		if(document.getElementById("A" + additionalkeys[key] + "ER") != null){
			if(editForm[additionalkeys[key]] == ""){
				invalidFields = true;
				document.getElementById("A" + additionalkeys[key]+"ER").style.display = "inline";
			}
			else{
				document.getElementById("A" + additionalkeys[key]+"ER").style.display = "none";
			}
		}
	}

	return invalidFields
}

function submitCreateModal(type){
	if(type == 'note'){
		submitCreateNoteModal();
	}else if(type == 'agenda'){
		submitCreateAgendaModal();
	}
}

function validateNewNoteValues(JSONForm){
	var invalidFields = false;

	for (key in JSONForm){
		if(document.getElementById("N" + key+"R") != null){
			if(JSONForm[key] == ""){
				invalidFields = true;
				document.getElementById("N" + key+"R").style.display = "inline";
			}
			else{
				document.getElementById("N" + key+"R").style.display = "none";
			}
		}
	}

	return invalidFields
}

function submitCreateNoteModal(){

	var today = new Date().getTime();
			
	//grab the form from the html document
	var form = document.getElementById('createDocument');
	//still testing validation
	//if(validateMeetingForm(form)){
	//parse it into a json object
	var formJSON = new convertFormToJSON(form);
	var invalid = validateNewNoteValues(formJSON);
	if(!invalid){
		//manually grab the values for each field expected by the backend
		var postCreator = <%=@userID%>;
		var postTitle = formJSON.title;
		var postDescription = formJSON.description;
		var postDatetime = today;
		var postContent = formJSON.content;

		//set up the data for the call
		var postData = JSON.stringify({
			"createdBy":postCreator,
			"title":postTitle,
			"description":postDescription,
			"dateCreated":postDatetime,
			"content":postContent
		});
		
		//make the POST request to the backend
		var doOnSuccess = function(data){
							//if successful then close the modal and reload the page
							$('#newNoteModal').modal('hide');
							window.location.reload(true);
						}
		ajaxRequest(postData, 'POST', '/Note/', true, doOnSuccess);
	}
}

function validateNewAgendaValues(JSONForm){
	var invalidFields = false;

	for (key in JSONForm){
		if(document.getElementById(key+"R") != null){
			if(JSONForm[key] == ""){
				invalidFields = true;
				document.getElementById(key+"R").style.display = "inline";
			}
			else{
				document.getElementById(key+"R").style.display = "none";
			}
		}
	}

	var datetime = timeToEpoch(document.getElementById("contentDate").value, document.getElementById("contentTime").value);
	var dateNow = (new Date).getTime();

	if(!(datetime*1000 > dateNow) && !invalidFields){
		invalidFields = true;
		alert("The date/time can't be in the past.");
	}

	return invalidFields;
}

function submitCreateAgendaModal(){
	var form = document.getElementById('createAgenda');
	var formJSON = new convertFormToJSON(form);

	var invalid = validateNewAgendaValues(formJSON);
	if(!invalid){
		var postTitle = formJSON.title;
		var postMeeting = document.getElementById("meeting").value;
		var postUser = <%=@userID%>;
		var datetime = timeToEpoch(formJSON["contentDate"], formJSON["contentTime"]);

		var postContent = JSON.stringify([{
				"title":formJSON["contentTitle"],
				"time":formJSON["contentTime"],
				"description":datetime,
				"content":[]
			}]);
		postContent = JSON.parse(postContent);

		var postData = JSON.stringify({
			"title":postTitle,
			"meeting":postMeeting,
			"user":postUser,
			"content":postContent
		});
		
		var doOnSuccess = function(data){
							$('#newAgendaModal').modal('hide');
							window.location.reload(true);
						}
		ajaxRequest(postData, 'POST', '/Agenda/', true, doOnSuccess);
	}
}

function showDeleteModal(ID, type){
	deleteID = ID;
	if(type == 'note'){
		$('#deleteNoteModal').modal('show');
	}else if(type == 'agenda'){
		$('#deleteAgendaModal').modal('show');
	}
}

function hideDeleteModal(type){
	if(type == 'note'){
		hideDeleteNoteModal();
	}else if(type == 'agenda'){
		hideDeleteAgendaModal();
	}
}

function hideDeleteNoteModal(){
	var deleteData = notesJSON[deleteID]['noteID'];

	var doOnSuccess = function(data){
						if(JSON.parse(data)["valid"] == "true"){
							$('#deleteNoteModal').modal('hide');
							window.location.reload(true);
						}
					}
	ajaxRequest('null', 'DELETE', '/Note/' + deleteData, true, doOnSuccess);
}

function hideDeleteAgendaModal(){
	var deleteData = agendasJSON[deleteID]['agendaID'];

	var doOnSuccess = function(data){
						if(JSON.parse(data)["valid"] == "true"){
							$('#deleteAgendaModal').modal('hide');
							window.location.reload(true);
						}
					}
	ajaxRequest('null', 'DELETE', '/Agenda/' + deleteData, true, doOnSuccess);
}

