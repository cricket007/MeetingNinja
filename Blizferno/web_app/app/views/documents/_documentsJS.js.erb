var currentID;
var deleteID;
var notesJSON = <%= raw @notes %>;
notesJSON = JSON.parse("["+notesJSON.toString()+"]");
var agendasJSON = <%= raw @agendas %>;
agendasJSON = JSON.parse(JSON.stringify(agendasJSON));
var userMeetings = <%= raw @userMeetingsRaw %>;
userMeetings = JSON.parse(JSON.stringify(userMeetings));

function showViewModal(ID, type){
	currentID = ID;
	if(type == 'note'){
		showViewNoteModal();
	}else if(type == 'agenda'){
		showViewAgendaModal();
	}
}

function showViewNoteModal(){
	document.getElementById("NtitleV").innerHTML = notesJSON[currentID]["title"];
	document.getElementById("NcontentV").innerHTML = notesJSON[currentID]["content"];
	document.getElementById("NdescriptionV").innerHTML = notesJSON[currentID]["description"];
	document.getElementById("NdateCreatedV").innerHTML = notesJSON[currentID]["dateCreated"];

	$('#editNoteModal').modal('hide');
	$('#viewNoteModal').modal('show');
}

function showViewAgendaModal(){
	document.getElementById("AtitleV").innerHTML = agendasJSON[currentID]["title"];
	document.getElementById("AuserIDV").innerHTML = agendasJSON[currentID]["userID"];
	document.getElementById("AmeetingIDV").innerHTML = agendasJSON[currentID]["meetingID"];
	document.getElementById("AcontentTitleV").innerHTML = agendasJSON[currentID]["content"]["1"]["title"];
	document.getElementById("AcontentTimeV").innerHTML = agendasJSON[currentID]["content"]["1"]["time"];
	document.getElementById("AcontentDescriptionV").innerHTML = agendasJSON[currentID]["content"]["1"]["description"];


createAgendaStructure(agendasJSON[currentID]["content"], document.getElementById("AcontentTitleV"));

	$('#editAgendaModal').modal('hide');
	$('#viewAgendaModal').modal('show');	
}



function createAgendaStructure(contents, element){
alert("here");
	if(contents.valueOf != null){
		for(var i=0; i < contents.length; i++){
			var title = element.appendChild(document.createElement(contents[i][title]));
			var time = element.appendChild(document.createElement(contents[i][time]));
			var description = element.appendChild(document.createElement(contents[i][description]));
			var contentElement = element.appendChild(document.createElement("Content:"));

			createAgendaStructure(contents[i]["contents"], contentElement);
		}
	}
}







function showViewModalNoID(type){
	updateEditedValues(type);
}

function showEditModal(ID, type){
	currentID = ID;
	if(type == 'note'){
		showEditNoteModal();
	}else if(type == 'agenda'){
		showEditAgendaModal();
	}
}

function showEditNoteModal(){
	document.getElementById("NtitleE").value = notesJSON[currentID]["title"];
	document.getElementById("NcontentE").value = notesJSON[currentID]["content"];
	document.getElementById("NdescriptionE").value = notesJSON[currentID]["description"];
	document.getElementById("NdateCreatedE").innerHTML = notesJSON[currentID]["dateCreated"];

	$('#viewNoteModal').modal('hide');
	$('#editNoteModal').modal('show');
}

function showEditAgendaModal(){
	document.getElementById("AtitleE").value = agendasJSON[currentID]["title"];
	document.getElementById("AuserIDE").innerHTML = agendasJSON[currentID]["userID"];
	document.getElementById("AcontentTitleE").value = agendasJSON[currentID]["content"]["1"]["title"];
	document.getElementById("AcontentTimeE").value = agendasJSON[currentID]["content"]["1"]["time"];
	document.getElementById("AcontentDescriptionE").value = agendasJSON[currentID]["content"]["1"]["description"];


		 	meetingIDs = [];
			possibleMeetings = [{"meetingID":agendasJSON[currentID]["meetingID"],"title":agendasJSON[currentID]["meetingID"]}]
			for(agenda in agendasJSON){
				meetingIDs.push(agenda['meetingID'])
			}
			for(meeting in userMeetings['meetings']){
				if(meetingIDs.indexOf(meeting['id']) > 0){
					possibleMeetings.push({"meetingID":meeting['id'],"title":meeting['title']});
				} 
			}


    populateSelect(possibleMeetings, "title", "meetingID", agendasJSON[currentID]["meetingID"], "AmeetingIDE");

	$('#viewAgendaModal').modal('hide');
	$('#editAgendaModal').modal('show');
}

function showEditModalNoID(type){
	showEditModal(currentID, type);
}

function cancelEdit(type){
	showViewModal(currentID, type)
}

function updateEditedValues(type){
	if(type == 'note'){
		var editForm = convertFormToJSON(document.getElementById("editNoteForm"));
		var invalid = validateEditedNoteValues(editForm);
		if(!invalid){	
			updateEditedNoteValues(editForm);
			showViewModal(currentID, type);
		}
	}else if(type =='agenda'){
		var form = document.getElementById('editAgendaForm');
		var formJSON = new convertFormToJSON(form);
		var invalid = validateEditedAgendaValues(formJSON);
		if (!invalid){
			updateEditedAgendaValues(formJSON);
			showViewModal(currentID, type);
		}
	}
}

function updateEditedNoteValues(){
	var editNoteID = noteJSON[currentID]['noteID'].toString();
	var editField = "";
	var editValue = "";
	var editData = "";


	for (key in notesJSON[currentID]){
		if(editForm[key] != null && notesJSON[currentID][key] != editForm[key]){
			notesJSON[currentID][key] = editForm[key];

			editField = key;
			editValue = notesJSON[currentID][key];
			editData = JSON.stringify({"noteID":editNoteID,"field":editField,"value":editValue});

			$.ajax({
				type: 'PUT',
				url: 'http://csse371-04.csse.rose-hulman.edu/Note/',
				data: editData
			});

		}
	}
}

function validateEditedNoteValues(editForm){
	var invalidFields = false;

	for (key in notesJSON[currentID]){
		if(document.getElementById("N" + key + "ER") != null){
			if(editForm[key] == ""){
				invalidFields = true;
				document.getElementById("N" + key+"ER").style.display = "inline";
			}
			else{
				document.getElementById("N" + key+"ER").style.display = "none";
			}
		}
	}

	return invalidFields
}

function updateEditedAgendaValues(formJSON){

		var postTitle = formJSON.title;
		var postMeeting = formJSON.meeting;
		var postUser = <%=@userID%>;
		var postContent = JSON.stringify([{
				"title":formJSON["contentTitle"],
				"time":formJSON["contentTime"],
				"description":formJSON["contentDescription"],
				"content":[]
			}]);
		postContent = JSON.parse(postContent);

		var postData = JSON.stringify({
			"agendaID":agendasJSON[currentID]["agendaID"],
			"title":postTitle,
			"meeting":postMeeting,
			"user":postUser,
			"content":postContent
		});

		$.ajax({
			type: 'PUT',
			url: 'http://csse371-04.csse.rose-hulman.edu/Agenda/',
			data: postData,
			success:function(data){
				$('#editAgendaModal').modal('hide');
				window.location.reload(true);
			}
		});
}

function validateEditedAgendaValues(editForm){
	var invalidFields = false;

	for (key in agendasJSON[currentID]){
		if(document.getElementById("A" + key + "ER") != null){
			if(editForm[key] == ""){
				invalidFields = true;
				document.getElementById("A" + key+"ER").style.display = "inline";
			}
			else{
				document.getElementById("A" + key+"ER").style.display = "none";
			}
		}
	}

	var additionalkeys = ["contentTitle","contentTime","contentDescription"];
	for (key in additionalkeys){
		if(document.getElementById("A" + additionalkeys[key] + "ER") != null){
			if(editForm[additionalkeys[key]] == ""){
				invalidFields = true;
				document.getElementById("A" + additionalkeys[key]+"ER").style.display = "inline";
			}
			else{
				document.getElementById("A" + additionalkeys[key]+"ER").style.display = "none";
			}
		}
	}

	return invalidFields
}

function submitCreateModal(type){
	if(type == 'note'){
		submitCreateNoteModal();
	}else if(type == 'agenda'){
		submitCreateAgendaModal();
	}
}

function validateNewNoteValues(JSONForm){
	var invalidFields = false;

	for (key in JSONForm){
		if(document.getElementById("N" + key+"R") != null){
			if(JSONForm[key] == ""){
				invalidFields = true;
				document.getElementById("N" + key+"R").style.display = "inline";
			}
			else{
				document.getElementById("N" + key+"R").style.display = "none";
			}
		}
	}

	return invalidFields
}

function submitCreateNoteModal(){

	var today = new Date();
	var dd = today.getDate();
	var mm = today.getMonth()+1; //January is 0!

	var yyyy = today.getFullYear();
	if(dd<10){dd='0'+dd} 
		if(mm<10){mm='0'+mm} today = mm+'/'+dd+'/'+yyyy;
		
		//grab the form from the html document
		var form = document.getElementById('createDocument');
		//still testing validation
		//if(validateMeetingForm(form)){
		//parse it into a json object
		var formJSON = new convertFormToJSON(form);
		var invalid = validateNewNoteValues(formJSON);
		if(!invalid){

		//manually grab the values for each field expected by the backend
		var postCreator = <%=@userID%>;
		var postTitle = formJSON.title;
		var postDescription = formJSON.description;
		var postDatetime = today;
		var postContent = formJSON.content;

		//set up the data for the call
		var postData = JSON.stringify({
			"createdBy":postCreator,
			"title":postTitle,
			"description":postDescription,
			"dateCreated":postDatetime,
			"content":postContent
		});
		
		//make the POST request to the backend
		$.ajax({
			type: 'POST',
			url: 'http://csse371-04.csse.rose-hulman.edu/Note/',
			data: postData,
			success:function(data){
				//if successful then close the modal and reload the page
				$('#newNoteModal').modal('hide');
				window.location.reload(true);
			}
		});
	}
}

function validateNewAgendaValues(JSONForm){
	var invalidFields = false;

	for (key in JSONForm){
		if(document.getElementById(key+"R") != null){
			if(JSONForm[key] == ""){
				invalidFields = true;
				document.getElementById(key+"R").style.display = "inline";
			}
			else{
				document.getElementById(key+"R").style.display = "none";
			}
		}
	}

	return invalidFields
}

function submitCreateAgendaModal(){
	var form = document.getElementById('createAgenda');
	var formJSON = new convertFormToJSON(form);

	var invalid = validateNewAgendaValues(formJSON);
	if(!invalid){
		var postTitle = formJSON.title;
		var postMeeting = document.getElementById("meeting").value;
		var postUser = <%=@userID%>;
		var postContent = JSON.stringify([{
				"title":formJSON["contentTitle"],
				"time":formJSON["contentTime"],
				"description":formJSON["contentDescription"],
				"content":[]
			}]);
		postContent = JSON.parse(postContent);

		var postData = JSON.stringify({
			"title":postTitle,
			"meeting":postMeeting,
			"user":postUser,
			"content":postContent
		});

		$.ajax({
			type: 'POST',
			url: 'http://csse371-04.csse.rose-hulman.edu/Agenda/',
			data: postData,
			success:function(data){
				$('#newAgendaModal').modal('hide');
				window.location.reload(true);
			}
		});
	}
}

function showDeleteModal(ID, type){
	deleteID = ID;
	if(type == 'note'){
		$('#deleteNoteModal').modal('show');
	}else if(type == 'agenda'){
		$('#deleteAgendaModal').modal('show');
	}
}

function hideDeleteModal(type){
	if(type == 'note'){
		hideDeleteNoteModal();
	}else if(type == 'agenda'){
		hideDeleteAgendaModal();
	}
}

function hideDeleteNoteModal(){
	var deleteData = notesJSON[deleteID]['noteID'];

	$.ajax({
		type: 'DELETE',
		url: 'http://csse371-04.csse.rose-hulman.edu/Note/' + deleteData,
		success:function(data){
			if(JSON.parse(data)["valid"] == "true"){
				$('#deleteNoteModal').modal('hide');
				window.location.reload(true);
			}
		}
	});
}

function hideDeleteAgendaModal(){
	var deleteData = agendasJSON[deleteID]['agendaID'];
	$.ajax({
		type: 'DELETE',
		url: 'http://csse371-04.csse.rose-hulman.edu/Agenda/' + deleteData,
		success:function(data){
			if(JSON.parse(data)["valid"] == "true"){
				$('#deleteAgendaModal').modal('hide');
				window.location.reload(true);
			}
		}
	});
}

function convertFormToJSON(form){
	var array = jQuery(form).serializeArray();
	var json = {};

	jQuery.each(array, function() {
		json[this.name] = this.value || '';
	});

	return json;
}

function getMembers(id){
    var newMembers = [];
    $( '#' + id + ' :selected' ).each( function( i, selected ) {
      newMembers[i] = $( selected ).val();
    });
    return newMembers;
}

function populateSelect(JSONArray, JSONDisplayColumn, JSONValueColumn, JSONSelectValues, selectID){
    var select = document.getElementById(selectID);

    if(select.options.length != 0){
      for(var i = select.options - 1; i > -1; i--){
        select.remove(i);
      }
	}

    for (var k in JSONArray){
      var el = document.createElement("option");
      el.textContent = JSONArray[k][JSONDisplayColumn];
      el.value = JSONArray[k][JSONValueColumn];
      select.appendChild(el);
    }

    for (var i in JSONSelectValues){
      for (var j in select.options){
        if(JSONSelectValues[i][JSONValueColumn] == select.options[j].value){
          select.options[j].selected = true;
          break;
        }
      }
    }
}
